// <auto-generated />
using System;
using LoanWise.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoanWise.Persistence.Migrations
{
    [DbContext(typeof(LoanWiseDbContext))]
    partial class LoanWiseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LoanWise.Domain.Entities.CreditProfile", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CalculatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditScore")
                        .HasColumnType("int");

                    b.Property<string>("SourceNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tier")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("CreditProfiles");
                });

            modelBuilder.Entity("LoanWise.Domain.Entities.EscrowTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LoanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferenceNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.ToTable("EscrowTransactions");
                });

            modelBuilder.Entity("LoanWise.Domain.Entities.Funding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FundedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LoanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LenderId");

                    b.HasIndex("LoanId");

                    b.HasIndex("UserId");

                    b.ToTable("Fundings");
                });

            modelBuilder.Entity("LoanWise.Domain.Entities.Loan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ApprovedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BorrowerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DurationInMonths")
                        .HasColumnType("int");

                    b.Property<int>("Purpose")
                        .HasColumnType("int");

                    b.Property<DateTime>("RejectedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RejectedReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RiskLevel")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BorrowerId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("LoanWise.Domain.Entities.Repayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PaidOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.ToTable("Repayments");
                });

            modelBuilder.Entity("LoanWise.Domain.Entities.SystemEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metadata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SystemEvents");
                });

            modelBuilder.Entity("LoanWise.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CreditScore")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("Tier")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LoanWise.Domain.Entities.VerificationDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BlobReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("VerificationDocuments");
                });

            modelBuilder.Entity("LoanWise.Domain.Entities.CreditProfile", b =>
                {
                    b.HasOne("LoanWise.Domain.Entities.User", "User")
                        .WithOne()
                        .HasForeignKey("LoanWise.Domain.Entities.CreditProfile", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LoanWise.Domain.Entities.EscrowTransaction", b =>
                {
                    b.HasOne("LoanWise.Domain.Entities.Loan", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("LoanWise.Domain.ValueObjects.Money", "Amount", b1 =>
                        {
                            b1.Property<Guid>("EscrowTransactionId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("nvarchar(max)")
                                .HasDefaultValue("GBP")
                                .HasColumnName("EscrowAmountCurrency");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("EscrowAmountValue");

                            b1.HasKey("EscrowTransactionId");

                            b1.ToTable("EscrowTransactions");

                            b1.WithOwner()
                                .HasForeignKey("EscrowTransactionId");
                        });

                    b.Navigation("Amount")
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("LoanWise.Domain.Entities.Funding", b =>
                {
                    b.HasOne("LoanWise.Domain.Entities.User", "Lender")
                        .WithMany()
                        .HasForeignKey("LenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LoanWise.Domain.Entities.Loan", "Loan")
                        .WithMany("Fundings")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LoanWise.Domain.Entities.User", null)
                        .WithMany("Fundings")
                        .HasForeignKey("UserId");

                    b.OwnsOne("LoanWise.Domain.ValueObjects.Money", "Amount", b1 =>
                        {
                            b1.Property<Guid>("FundingId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("nvarchar(max)")
                                .HasDefaultValue("GBP")
                                .HasColumnName("FundingAmountCurrency");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("FundingAmountValue");

                            b1.HasKey("FundingId");

                            b1.ToTable("Fundings");

                            b1.WithOwner()
                                .HasForeignKey("FundingId");
                        });

                    b.Navigation("Amount")
                        .IsRequired();

                    b.Navigation("Lender");

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("LoanWise.Domain.Entities.Loan", b =>
                {
                    b.HasOne("LoanWise.Domain.Entities.User", "Borrower")
                        .WithMany("Loans")
                        .HasForeignKey("BorrowerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("LoanWise.Domain.ValueObjects.Money", "Amount", b1 =>
                        {
                            b1.Property<Guid>("LoanId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("nvarchar(max)")
                                .HasDefaultValue("GBP")
                                .HasColumnName("AmountCurrency");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("AmountValue");

                            b1.HasKey("LoanId");

                            b1.ToTable("Loans");

                            b1.WithOwner()
                                .HasForeignKey("LoanId");
                        });

                    b.Navigation("Amount")
                        .IsRequired();

                    b.Navigation("Borrower");
                });

            modelBuilder.Entity("LoanWise.Domain.Entities.Repayment", b =>
                {
                    b.HasOne("LoanWise.Domain.Entities.Loan", "Loan")
                        .WithMany("Repayments")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("LoanWise.Domain.ValueObjects.Money", "Amount", b1 =>
                        {
                            b1.Property<Guid>("RepaymentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("nvarchar(max)")
                                .HasDefaultValue("GBP")
                                .HasColumnName("RepaymentAmountCurrency");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("RepaymentAmountValue");

                            b1.HasKey("RepaymentId");

                            b1.ToTable("Repayments");

                            b1.WithOwner()
                                .HasForeignKey("RepaymentId");
                        });

                    b.Navigation("Amount")
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("LoanWise.Domain.Entities.SystemEvent", b =>
                {
                    b.HasOne("LoanWise.Domain.Entities.User", "User")
                        .WithMany("Events")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LoanWise.Domain.Entities.VerificationDocument", b =>
                {
                    b.HasOne("LoanWise.Domain.Entities.User", "User")
                        .WithMany("Documents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LoanWise.Domain.Entities.Loan", b =>
                {
                    b.Navigation("Fundings");

                    b.Navigation("Repayments");
                });

            modelBuilder.Entity("LoanWise.Domain.Entities.User", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("Events");

                    b.Navigation("Fundings");

                    b.Navigation("Loans");
                });
#pragma warning restore 612, 618
        }
    }
}
